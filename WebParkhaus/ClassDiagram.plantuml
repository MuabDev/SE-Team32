@startuml
class AvgView [[java:AvgView]] {
	~float avg
	~float view()
	+void update()
}
class View [[java:View]] {
}
View <|-l- AvgView
interface EinweiserIF [[java:EinweiserIF]] {
	int enter(Auto in)
	Auto leave(Auto out)
	void addCar(Auto in)
	List<Auto> getCars()
	int getSize()
	int getMax()
	void setMax(int m)
}

class Berechnung [[java:Berechnung]] {
}
class SumView [[java:SumView]] {
}
class AvgView [[java:AvgView]] {
}
class ParkhausServlet [[java:ParkhausServlet]] {
	-{static}long serialVersionUID
	+ParkhausServlet()
	#void doGet(HttpServletRequest request, HttpServletResponse response)
	#void doPost(HttpServletRequest request, HttpServletResponse response)
	-{static}String getBody(HttpServletRequest request)
}
class Berechnung [[java:Berechnung]] {
}
ParkhausServlet -r-> Berechnung : calc
class Einweiser [[java:Einweiser]] {
}
ParkhausServlet -->  Einweiser : haus
class SumView [[java:SumView]] {
}
ParkhausServlet -r->  SumView : sum
class AvgView [[java:AvgView]] {
}
ParkhausServlet -r->  AvgView : avg
class HttpServlet [[java:javax.servlet.http.HttpServlet]] {
}
HttpServlet <|-- ParkhausServlet
abstract class View [[java:View]] {
	+void subscribe(Berechnung m)
	+{abstract}void update()
}
class Berechnung [[java:Berechnung]] {
}
View -u->  Berechnung : model
class Einweiser [[java:Einweiser]] {
	-int max
	+Einweiser()
	+int enter(Auto in)
	+Auto leave(Auto out)
	+void addCar(Auto in)
	+List<Auto> getCars()
	+int getSize()
	+int getMax()
	+void setMax(int m)
}
class Auto [[java:Auto]] {
}
Einweiser -->  Auto : cars
interface EinweiserIF [[java:EinweiserIF]] {
}
EinweiserIF <|.. Einweiser
interface BerechnungIF [[java:BerechnungIF]] {
	void addCost(float cost)
	List<Float> getCosts()
	int getSize()
}
class Auto [[java:Auto]] {
	-int parkplatz
	-String ticket
	+Auto()
	+Auto(int p, String t)
	+int getParkplatz()
	+String getTicket()
	+void setParkplatz(int p)
	+void setTicket(String t)
}
interface AutoIF [[java:AutoIF]] {
}
AutoIF <|.l. Auto
class AbstractPublisher [[java:AbstractPublisher]] {
	+void addView(View v)
	+void update()
}
class View [[java:View]] {
}
AbstractPublisher -l->  View : views
interface AutoIF [[java:AutoIF]] {
	int getParkplatz()
	String getTicket()
	void setParkplatz(int p)
	void setTicket(String t)
}
class Berechnung [[java:Berechnung]] {
	~List<Float> costs
	+Berechnung()
	+void addCost(float cost)
	+List<Float> getCosts()
	+int getSize()
}
class AbstractPublisher [[java:AbstractPublisher]] {
}
AbstractPublisher <|-u- Berechnung
interface BerechnungIF [[java:BerechnungIF]] {
}
BerechnungIF <|.d. Berechnung
class SumView [[java:SumView]] {
	~float sum
	~float view()
	+void update()
}
class View [[java:View]] {
}
View <|-- SumView

class EinweiserIF [[java:EinweiserIF]] {
}


@enduml